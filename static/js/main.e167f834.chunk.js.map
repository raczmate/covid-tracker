{"version":3,"sources":["components/Loader/Loader.module.css","components/DataCards/DataCard.module.css","context/statContext.js","utils/formatter.js","api/axios.js","api/apicalls.js","components/Loader/Loader.js","components/Header/Header.js","components/DataCards/DataCard.js","components/GlobalCards/GlobalCards.js","components/CountryCards/CountryCards.js","components/LocalCard/LocalCard.js","components/CountrySelector/CountrySelector.js","components/pages/MainPage/MainPage.js","reducer/countryReducer.js","components/pages/SecondPage/SecondPage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","StatContext","createContext","Countries","Global","Date","useStats","useContext","numFormatter","value","Number","isInteger","toString","replace","axios","defaults","headers","get","interceptors","response","use","undefined","error","data","status","covidInstance","create","baseURL","locationInstance","getSummary","a","getCountry","locResponse","country","Loader","className","styles","icon","faVirus","size","spin","loadIcon","loadText","Header","refreshData","apiDate","formattedDate","toISOString","substring","Navbar","bg","variant","sticky","Brand","href","as","Link","to","pathname","Button","style","alignSelf","textDecoration","Nav","marginLeft","onClick","target","color","faGithub","getIcon","faHeadSideVirus","faSkullCrossbones","faVirusSlash","faQuestion","DataCard","Card","padding","borderRadius","marginTop","topMargin","backgroundRepeat","marginBottom","bottomMargin","withShadow","Image","src","bgImage","position","Component","Body","title","Title","Subtitle","textShadow","subtitle","Text","bodyColor","black","fontWeight","float","fontSize","bodyFontSize","body","console","log","prototype","PropTypes","shape","string","bool","element","GlobalCards","Row","Col","lg","sm","NewConfirmed","NewDeaths","NewRecovered","CountryCard","code","CountryCode","toLowerCase","LocalCards","savedCountry","localStorage","getItem","find","c","Country","CountryCards","CountrySelector","addCountry","removeCountry","selected","map","xs","md","Dropdown","Toggle","id","Menu","Item","includes","backgroundColor","MainPage","LocalCard","countriesList","countryReducer","state","action","type","payload","filter","length","Error","SecondPage","useReducer","dispatch","App","useState","setData","loading","setLoading","useEffect","fetchStats","then","setTimeout","fetchLocation","setItem","Provider","Container","fluid","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e167f834.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreen-container\":\"Loader_fullscreen-container__32jwg\",\"item-container\":\"Loader_item-container__2RJ11\",\"loadIcon\":\"Loader_loadIcon__1dWoz\",\"loadText\":\"Loader_loadText__bNB-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"covid-card\":\"DataCard_covid-card__PQuv1\",\"card-shadow\":\"DataCard_card-shadow__3xaL7\",\"bg-image\":\"DataCard_bg-image__1KdUU\"};","import { createContext, useContext } from 'react';\r\n\r\nconst StatContext = createContext({\r\n  Countries: null,\r\n  Global: null,\r\n  Date: null,\r\n});\r\n\r\nexport const useStats = () => useContext(StatContext);\r\n\r\nexport default StatContext;\r\n","const numFormatter = (value) =>\r\n  Number.isInteger(value)\r\n    ? value.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, '.')\r\n    : value;\r\n\r\nexport default numFormatter;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.headers.get['Content-Type'] = 'application/json';\r\naxios.defaults.headers.get['Cache-Control'] = 'no-cache';\r\naxios.defaults.headers.get['Access-Control-Allow-Origin'] = '*';\r\n\r\naxios.interceptors.response.use(undefined, function (error) {\r\n  const errObj = {\r\n    error: error.response ? error.response.data : 'Sikertelen kapcsolódás',\r\n    status: error.response ? error.response.status : 503,\r\n  };\r\n\r\n  return errObj;\r\n});\r\n\r\nexport const covidInstance = axios.create({\r\n  baseURL: 'https://api.covid19api.com',\r\n});\r\n\r\nexport const locationInstance = axios.create({\r\n  baseURL: 'http://ip-api.com/json',\r\n});\r\n","import { countries } from '../utils';\r\nimport { covidInstance, locationInstance } from './axios';\r\n\r\nexport const getSummary = async () => {\r\n  const response = await covidInstance.get('/summary');\r\n  const { Countries, Global, Date } = response.data;\r\n\r\n  return { Countries, Global, Date };\r\n};\r\n\r\nexport const getCountry = async () => {\r\n  const locResponse = await locationInstance.get();\r\n  const { country } = locResponse.data;\r\n  return { country };\r\n};\r\n","import React from 'react';\r\nimport styles from './Loader.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVirus } from '@fortawesome/free-solid-svg-icons';\r\nimport FadeIn from 'react-fade-in';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={styles['fullscreen-container']}>\r\n      <FadeIn>\r\n        <div className={styles['item-container']}>\r\n          <FontAwesomeIcon\r\n            icon={faVirus}\r\n            size=\"6x\"\r\n            spin\r\n            className={styles.loadIcon}\r\n          />\r\n          <p className={styles.loadText}>\r\n            Adatok szinkronizálása folyamatban...\r\n          </p>\r\n        </div>\r\n      </FadeIn>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\nimport { useStats } from '../../context/statContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header({ refreshData }) {\r\n  const { Date: apiDate } = useStats();\r\n  let formattedDate = new Date(apiDate).toISOString().substring(0, 10);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <Navbar.Brand href=\"#\" as={Link} to={{ pathname: '/' }}>\r\n          Covid-tracker\r\n        </Navbar.Brand>\r\n        <Button\r\n          variant=\"dark\"\r\n          style={{ alignSelf: 'center' }}\r\n          as={Link}\r\n          to={{ pathname: '/countries' }}\r\n          style={{\r\n            textDecoration: 'none',\r\n          }}\r\n        >\r\n          Országok\r\n        </Button>\r\n        <Nav style={{ marginLeft: 'auto' }}>\r\n          <Nav.Link as=\"li\" style={{ alignSelf: 'center' }}>\r\n            Utolsó API frissítés dátuma: {formattedDate}\r\n          </Nav.Link>\r\n          <Button\r\n            variant=\"dark\"\r\n            onClick={refreshData}\r\n            style={{ alignSelf: 'center' }}\r\n          >\r\n            Adatok frissítése\r\n          </Button>\r\n\r\n          <Nav.Link\r\n            href=\"https://github.com/raczmate/covid-tracker\"\r\n            target=\"_blank\"\r\n            style={{ color: 'white' }}\r\n          >\r\n            <FontAwesomeIcon icon={faGithub} size={'3x'} color=\"white\" />\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Card, Image } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styles from './DataCard.module.css';\r\n\r\nimport {\r\n  faSkullCrossbones,\r\n  faVirusSlash,\r\n  faHeadSideVirus,\r\n  faQuestion,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction getIcon(icon) {\r\n  switch (icon) {\r\n    case 'Confirmed': {\r\n      return faHeadSideVirus;\r\n    }\r\n    case 'Deaths': {\r\n      return faSkullCrossbones;\r\n    }\r\n    case 'Recovered': {\r\n      return faVirusSlash;\r\n    }\r\n    default:\r\n      return faQuestion;\r\n  }\r\n}\r\n\r\nDataCard.prototype = {\r\n  data: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    body: PropTypes.string,\r\n    bodyFontSize: PropTypes.string,\r\n    bodyColor: PropTypes.string,\r\n    bgImage: PropTypes.string,\r\n    icon: PropTypes.string,\r\n    padding: PropTypes.string,\r\n    topMargin: PropTypes.string,\r\n    withShadow: PropTypes.bool,\r\n    Component: PropTypes.element,\r\n  }),\r\n};\r\n\r\nfunction DataCard({ data }) {\r\n  return (\r\n    <Card\r\n      style={{\r\n        padding: data.padding ?? '0.5rem',\r\n        borderRadius: '0.5rem',\r\n        marginTop: data.topMargin ?? '2rem',\r\n\r\n        backgroundRepeat: 'no-repeat',\r\n        marginBottom: data.bottomMargin ?? '0.5rem',\r\n      }}\r\n      className={`${data.withShadow ? styles['card-shadow'] : ''} ${\r\n        styles['covid-card']\r\n      }`}\r\n    >\r\n      <Image\r\n        className={styles['bg-image']}\r\n        src={data.bgImage}\r\n        styles={{\r\n          position: 'absolute',\r\n        }}\r\n      ></Image>\r\n      {!data.Component && (\r\n        <Card.Body>\r\n          {data.title && <Card.Title>{data.title}</Card.Title>}\r\n\r\n          <Card.Subtitle\r\n            className=\"text-muted\"\r\n            style={{\r\n              marginBottom: '0.5rem',\r\n              textShadow: '0 0 2px white',\r\n            }}\r\n          >\r\n            {data.subtitle}\r\n          </Card.Subtitle>\r\n          <Card.Text\r\n            style={{\r\n              color: data.bodyColor ? data.bodyColor : data.black,\r\n              fontWeight: '500',\r\n              float: data.icon ? 'left' : 'none',\r\n              fontSize: data.bodyFontSize ?? '1.3rem',\r\n              textShadow: '0 0 2px white',\r\n            }}\r\n          >\r\n            {data.body}\r\n            {console.log(data.body)}\r\n          </Card.Text>\r\n          {data.icon && (\r\n            <Card.Text style={{ float: 'right', textShadow: '0 0 2px white' }}>\r\n              <FontAwesomeIcon\r\n                icon={getIcon(data.icon)}\r\n                style={{ color: data.bodyColor ?? 'black' }}\r\n                size=\"4x\"\r\n              />\r\n            </Card.Text>\r\n          )}\r\n        </Card.Body>\r\n      )}\r\n      {data.Component && <data.Component />}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DataCard;\r\n","import React from 'react';\r\nimport { DataCard } from '../index';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useStats } from '../../context/statContext';\r\nimport { numFormatter } from '../../utils';\r\nexport function GlobalCards() {\r\n  const { Global } = useStats();\r\n  return (\r\n    <>\r\n      <h1 className=\"display-4 text-center text-md-left\">Globális adatok</h1>\r\n      <Row>\r\n        <Col lg={4} sm={12}>\r\n          <DataCard\r\n            data={{\r\n              title: 'Új esetek száma',\r\n              bodyColor: 'red',\r\n              body: numFormatter(Global.NewConfirmed) + ' fő',\r\n              subtitle: 'Az elmúlt 24 órában',\r\n              icon: 'Confirmed',\r\n              bgImage:\r\n                'https://upload.wikimedia.org/wikipedia/commons/a/ad/BlankMap-World_gray.svg',\r\n              withShadow: true,\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col lg={4} sm={12}>\r\n          <DataCard\r\n            data={{\r\n              title: 'Új elhalálozások száma',\r\n              bodyColor: 'red',\r\n              body: numFormatter(Global.NewDeaths) + ' fő',\r\n              subtitle: 'Az elmúlt 24 órában',\r\n              icon: 'Deaths',\r\n              bgImage:\r\n                'https://upload.wikimedia.org/wikipedia/commons/a/ad/BlankMap-World_gray.svg',\r\n              withShadow: true,\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col lg={4} sm={12}>\r\n          <DataCard\r\n            data={{\r\n              title: 'Új gyógyultak száma',\r\n              bodyColor: 'green',\r\n              body: numFormatter(Global.NewRecovered) + ' fő',\r\n              subtitle: 'Az elmúlt 24 órában',\r\n              icon: 'Recovered',\r\n              bgImage:\r\n                'https://upload.wikimedia.org/wikipedia/commons/a/ad/BlankMap-World_gray.svg',\r\n              withShadow: true,\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GlobalCards;\r\n","import React from 'react';\r\nimport { DataCard } from '../index';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { numFormatter } from '../../utils';\r\n\r\nfunction CountryCard({ country }) {\r\n  const code = country.CountryCode.toLowerCase();\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg={4} sm={12}>\r\n          <DataCard\r\n            style={{ marginBottom: '30rem' }}\r\n            data={{\r\n              title: 'Új esetek száma',\r\n              bodyColor: 'red',\r\n              body: numFormatter(country.NewConfirmed) + ' fő',\r\n              subtitle: 'Az elmúlt 24 órában',\r\n              icon: 'Confirmed',\r\n              bgImage: `http://www.geonames.org/flags/x/${code}.gif`,\r\n              withShadow: true,\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col lg={4} sm={12}>\r\n          <DataCard\r\n            data={{\r\n              title: 'Új elhalálozások száma',\r\n              bodyColor: 'red',\r\n              body: numFormatter(country.NewDeaths) + ' fő',\r\n              subtitle: 'Az elmúlt 24 órában',\r\n              icon: 'Deaths',\r\n              bgImage: `http://www.geonames.org/flags/x/${code}.gif`,\r\n              withShadow: true,\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col lg={4} sm={12}>\r\n          <DataCard\r\n            data={{\r\n              title: 'Új gyógyultak száma',\r\n              bodyColor: 'green',\r\n              body: numFormatter(country.NewRecovered) + ' fő',\r\n              subtitle: 'Az elmúlt 24 órában',\r\n              icon: 'Recovered',\r\n              bgImage: `http://www.geonames.org/flags/x/${code}.gif`,\r\n              withShadow: true,\r\n            }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryCard;\r\n","import React from 'react';\r\nimport { useStats } from '../../context/statContext';\r\nimport { CountryCards } from '../index';\r\n\r\nexport function LocalCards() {\r\n  const { Countries } = useStats();\r\n  const savedCountry = localStorage.getItem('preferredCountry');\r\n  const country = Countries.find((c) => c.Country === savedCountry);\r\n  if (!country) return null;\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"display-4 text-center text-md-left\">Helyi adatok</h1>\r\n      <CountryCards country={country} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LocalCards;\r\n","import React from 'react';\r\nimport { useStats } from '../../context/statContext';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { CountryCards } from '../../components';\r\nimport { Row, Col } from 'react-bootstrap';\r\nconst CountrySelector = ({ addCountry, removeCountry, selected }) => {\r\n  const { Countries } = useStats();\r\n  Countries.map((country) => country.Country);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={12} md={6} className=\"mt-2 mx-auto\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\r\n              Ország kiválasztása\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              {Countries.map((country) => (\r\n                <Dropdown.Item\r\n                  key={country.Country}\r\n                  onClick={\r\n                    selected.includes(country)\r\n                      ? () => removeCountry(country)\r\n                      : () => addCountry(country)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: selected.includes(country)\r\n                      ? 'LightSlateGrey'\r\n                      : 'white',\r\n                  }}\r\n                >\r\n                  {country.Country}\r\n                </Dropdown.Item>\r\n              ))}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n\r\n      {selected.map((country) => (\r\n        <CountryCards country={country} key={country.Country} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default CountrySelector;\r\n","import React from 'react';\r\nimport { DataCard, GlobalCards, LocalCard } from '../../../components';\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <DataCard data={{ Component: GlobalCards, padding: '4rem' }} />\r\n      <DataCard\r\n        data={{\r\n          Component: LocalCard,\r\n          padding: '4rem',\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default MainPage;\r\n","import React from 'react';\r\n\r\nexport const countriesList = [];\r\n\r\nexport function countryReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD': {\r\n      if (state.includes(action.payload)) return [...state];\r\n      return [...state, action.payload];\r\n    }\r\n    case 'REMOVE': {\r\n      if (state.includes(action.payload)) {\r\n        const filtered = state.filter(\r\n          (country) => country.Country !== action.payload.Country\r\n        );\r\n        return filtered;\r\n      }\r\n      return [...state];\r\n    }\r\n    case 'RESET': {\r\n      state.length = 0;\r\n      return [...state];\r\n    }\r\n    default: {\r\n      throw new Error(`Helytelen művelet!`);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { CountrySelector } from '../../../components';\r\nimport { countriesList, countryReducer } from '../../../reducer/countryReducer';\r\nimport { useReducer } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nconst SecondPage = () => {\r\n  const [selected, dispatch] = useReducer(countryReducer, countriesList);\r\n\r\n  return (\r\n    <div>\r\n      <CountrySelector\r\n        addCountry={(country) => dispatch({ type: 'ADD', payload: country })}\r\n        removeCountry={(country) =>\r\n          dispatch({ type: 'REMOVE', payload: country })\r\n        }\r\n        selected={selected}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default SecondPage;\r\n","import React, { useEffect, useState } from 'react';\nimport StatContext from './context/statContext';\nimport { getSummary, getCountry } from './api';\nimport { MainPage, SecondPage } from './components/pages';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Loader, Header } from './components';\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      await getSummary().then((data) => {\n        if (data.error) {\n          throw Error('Sikertelen api hívás');\n        } else {\n          setData(data);\n        }\n        setLoading(false);\n      });\n    };\n    if (!data || loading)\n      setTimeout(() => {\n        fetchStats();\n      }, 1500);\n  }, [loading]);\n  useEffect(() => {\n    const fetchLocation = async () => {\n      await getCountry().then((data) => {\n        if (!data.error) {\n          localStorage.setItem('preferredCountry', data.country);\n        } else {\n          console.log('Sikertelen lokáció lekérés...');\n        }\n      });\n    };\n\n    if (!localStorage.getItem('preferredCountry')) fetchLocation();\n  }, []);\n  if (loading) return <Loader />;\n\n  return (\n    <>\n      <StatContext.Provider value={data}>\n        <Router>\n          <Header refreshData={() => setLoading(true)} />\n          <Container fluid>\n            <Switch>\n              <Route exact path=\"/\" component={MainPage} />\n              <Route exact path=\"/countries\" component={SecondPage} />\n              <Route path=\"*\" component={MainPage} />\n            </Switch>\n          </Container>\n        </Router>\n      </StatContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}